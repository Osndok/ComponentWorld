CREATE TABLE licenses (description VARCHAR (1024), id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, name VARCHAR (64) NOT NULL, PRIMARY KEY (id))
;

CREATE TABLE tapestryVersions (description VARCHAR (256), id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, name VARCHAR (64) NOT NULL, sortBy INTEGER NOT NULL, PRIMARY KEY (id))
;

CREATE TABLE settings (description VARCHAR (1024), id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, name VARCHAR (64) NOT NULL, value VARCHAR (256), PRIMARY KEY (id))
;

CREATE TABLE roles (description VARCHAR (1024) NOT NULL, enabled SMALLINT NOT NULL, id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, name VARCHAR (64) NOT NULL, PRIMARY KEY (id))
;

CREATE TABLE sourceTypes (description VARCHAR (256), id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, name VARCHAR (64) NOT NULL, namePlural VARCHAR (66), sortBy INTEGER, PRIMARY KEY (id))
;

CREATE TABLE users (LastName VARCHAR (128) NOT NULL, enabled SMALLINT NOT NULL, firstName VARCHAR (128) NOT NULL, id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, roleId INTEGER, userId VARCHAR (64), PRIMARY KEY (id))
;

CREATE TABLE modules (description VARCHAR (4096) NOT NULL, enabled SMALLINT NOT NULL, id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, licenseId INTEGER, name VARCHAR (64) NOT NULL, sourceTypeId INTEGER, url VARCHAR (1024), PRIMARY KEY (id))
;

CREATE TABLE entryTypes (description VARCHAR (256) NOT NULL, id INTEGER NOT NULL, name VARCHAR (64) NOT NULL, namePlural VARCHAR (66), sortBy INTEGER, PRIMARY KEY (id))
;

CREATE TABLE components (demonstrationUrl VARCHAR (1024), description VARCHAR (4096) NOT NULL, documentationUrl VARCHAR (1024), enabled SMALLINT NOT NULL, entryTypeId INTEGER NOT NULL, firstAvailable DATE, id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, licenseId INTEGER, moduleId INTEGER, name VARCHAR (64) NOT NULL, parentId INTEGER, sinceId INTEGER, sourceTypeId INTEGER, untilId INTEGER, PRIMARY KEY (id))
;

ALTER TABLE users ADD FOREIGN KEY (roleId) REFERENCES roles (id)
;

ALTER TABLE modules ADD FOREIGN KEY (licenseId) REFERENCES licenses (id)
;

ALTER TABLE modules ADD FOREIGN KEY (id) REFERENCES tapestryVersions (id)
;

ALTER TABLE modules ADD FOREIGN KEY (sourceTypeId) REFERENCES sourceTypes (id)
;

ALTER TABLE modules ADD FOREIGN KEY (id) REFERENCES tapestryVersions (id)
;

ALTER TABLE components ADD FOREIGN KEY (entryTypeId) REFERENCES entryTypes (id)
;

ALTER TABLE components ADD FOREIGN KEY (licenseId) REFERENCES licenses (id)
;

ALTER TABLE components ADD FOREIGN KEY (moduleId) REFERENCES modules (id)
;

ALTER TABLE components ADD FOREIGN KEY (parentId) REFERENCES components (id)
;

ALTER TABLE components ADD FOREIGN KEY (sinceId) REFERENCES tapestryVersions (id)
;

ALTER TABLE components ADD FOREIGN KEY (sourceTypeId) REFERENCES sourceTypes (id)
;

ALTER TABLE components ADD FOREIGN KEY (untilId) REFERENCES tapestryVersions (id)
;

CREATE TABLE AUTO_PK_SUPPORT (  TABLE_NAME CHAR(100) NOT NULL,  NEXT_ID BIGINT NOT NULL,  PRIMARY KEY(TABLE_NAME))
;

DELETE FROM AUTO_PK_SUPPORT WHERE TABLE_NAME IN ('components', 'entryTypes', 'licenses', 'modules', 'roles', 'settings', 'sourceTypes', 'tapestryVersions', 'users')
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('components', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('entryTypes', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('licenses', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('modules', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('roles', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('settings', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('sourceTypes', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('tapestryVersions', 200)
;

INSERT INTO AUTO_PK_SUPPORT (TABLE_NAME, NEXT_ID) VALUES ('users', 200)
;

